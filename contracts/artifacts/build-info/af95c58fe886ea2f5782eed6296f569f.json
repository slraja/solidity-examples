{
	"id": "af95c58fe886ea2f5782eed6296f569f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/05_GreatestPowerOf2_NoAssembly.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract Level4Template {\n    function solution(uint256 number) external pure returns (uint256) {\n        // Special case: If the number is 0, return 0 (though in the prompt, numbers start from 2^0)\n        if (number == 0) {\n            return 0;\n        }\n        \n        // Initialize a variable to store the result, which will be the highest power of 2\n        uint256 result = 1;\n\n        // Keep shifting the input number to the right until we get a single bit\n        while (number > 1) {\n            number = number >> 1;\n            result = result << 1; // Every time we shift, we track the corresponding power of 2\n        }\n\n        return result; // This will now contain the greatest power of 2 less than or equal to the original input\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 2000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/05_GreatestPowerOf2_NoAssembly.sol": {
				"Level4Template": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "solution",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":58:816  contract Level4Template {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":58:816  contract Level4Template {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xdb53653e\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":88:814  function solution(uint256 number) external pure returns (uint256) {... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":88:814  function solution(uint256 number) external pure returns (uint256) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":145:152  uint256 */\n      0x00\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":269:275  number */\n      dup2\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":279:280  0 */\n      0x00\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":269:280  number == 0 */\n      sub\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":265:315  if (number == 0) {... */\n      tag_11\n      jumpi\n      pop\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":303:304  0 */\n      0x00\n      swap2\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":88:814  function solution(uint256 number) external pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":265:315  if (number == 0) {... */\n    tag_11:\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":441:442  1 */\n      0x01\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":534:694  while (number > 1) {... */\n    tag_12:\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":550:551  1 */\n      0x01\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":541:547  number */\n      dup4\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":541:551  number > 1 */\n      gt\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":534:694  while (number > 1) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":586:587  1 */\n      0x01\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":576:587  number >> 1 */\n      swap3\n      dup4\n      shr\n      swap3\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":610:621  result << 1 */\n      shl\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":534:694  while (number > 1) {... */\n      jump(tag_12)\n    tag_13:\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":711:717  result */\n      swap3\n        /* \"contracts/05_GreatestPowerOf2_NoAssembly.sol\":88:814  function solution(uint256 number) external pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_6:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_16\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_16:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122004f5308c6829e720c440830be107300c610299a4759a90cc1ff29d79b97c0a2764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060c18061001c5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063db53653e14602a575b5f80fd5b603960353660046075565b604b565b60405190815260200160405180910390f35b5f815f03605957505f919050565b60015b6001831115606f57600192831c921b605c565b92915050565b5f602082840312156084575f80fd5b503591905056fea264697066735822122004f5308c6829e720c440830be107300c610299a4759a90cc1ff29d79b97c0a2764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC1 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDB53653E EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x39 PUSH1 0x35 CALLDATASIZE PUSH1 0x4 PUSH1 0x75 JUMP JUMPDEST PUSH1 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 PUSH0 SUB PUSH1 0x59 JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP4 GT ISZERO PUSH1 0x6F JUMPI PUSH1 0x1 SWAP3 DUP4 SHR SWAP3 SHL PUSH1 0x5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x84 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV CREATE2 ADDRESS DUP13 PUSH9 0x29E720C440830BE107 ADDRESS 0xC PUSH2 0x299 LOG4 PUSH22 0x9A90CC1FF29D79B97C0A2764736F6C63430008160033 ",
							"sourceMap": "58:758:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@solution_39": {
									"entryPoint": 75,
									"id": 39,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:378:1",
										"nodeType": "YulBlock",
										"src": "0:378:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:1",
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:33:1",
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nativeSrc": "165:23:1",
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nativeSrc": "300:76:1",
													"nodeType": "YulBlock",
													"src": "300:76:1",
													"statements": [
														{
															"nativeSrc": "310:26:1",
															"nodeType": "YulAssignment",
															"src": "310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:1",
																		"nodeType": "YulLiteral",
																		"src": "333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:1"
																},
																"nativeSrc": "318:18:1",
																"nodeType": "YulFunctionCall",
																"src": "318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "363:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																},
																"nativeSrc": "345:25:1",
																"nodeType": "YulFunctionCall",
																"src": "345:25:1"
															},
															"nativeSrc": "345:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "345:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "199:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:1",
														"nodeType": "YulTypedName",
														"src": "269:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:1",
														"nodeType": "YulTypedName",
														"src": "291:4:1",
														"type": ""
													}
												],
												"src": "199:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c8063db53653e14602a575b5f80fd5b603960353660046075565b604b565b60405190815260200160405180910390f35b5f815f03605957505f919050565b60015b6001831115606f57600192831c921b605c565b92915050565b5f602082840312156084575f80fd5b503591905056fea264697066735822122004f5308c6829e720c440830be107300c610299a4759a90cc1ff29d79b97c0a2764736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDB53653E EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x39 PUSH1 0x35 CALLDATASIZE PUSH1 0x4 PUSH1 0x75 JUMP JUMPDEST PUSH1 0x4B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP2 PUSH0 SUB PUSH1 0x59 JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP4 GT ISZERO PUSH1 0x6F JUMPI PUSH1 0x1 SWAP3 DUP4 SHR SWAP3 SHL PUSH1 0x5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x84 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV CREATE2 ADDRESS DUP13 PUSH9 0x29E720C440830BE107 ADDRESS 0xC PUSH2 0x299 LOG4 PUSH22 0x9A90CC1FF29D79B97C0A2764736F6C63430008160033 ",
							"sourceMap": "58:758:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;88:726;;;;;;:::i;:::-;;:::i;:::-;;;345:25:1;;;333:2;318:18;88:726:0;;;;;;;;145:7;269:6;279:1;269:11;265:50;;-1:-1:-1;303:1:0;;88:726;-1:-1:-1;88:726:0:o;265:50::-;441:1;534:160;550:1;541:6;:10;534:160;;;586:1;576:11;;;;610;534:160;;;711:6;88:726;-1:-1:-1;;88:726:0:o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "38600",
								"executionCost": "91",
								"totalCost": "38691"
							},
							"external": {
								"solution(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 816,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 816,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 816,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 816,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 816,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 816,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 816,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 816,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 816,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 816,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 816,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004f5308c6829e720c440830be107300c610299a4759a90cc1ff29d79b97c0a2764736f6c63430008160033",
									".code": [
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "DB53653E"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 816,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 814,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 88,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 145,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 279,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 265,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 265,
											"end": 315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 303,
											"end": 304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 265,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 265,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 534,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 534,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 541,
											"end": 547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 541,
											"end": 551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 534,
											"end": 694,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 534,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 534,
											"end": 694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 586,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 576,
											"end": 587,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 576,
											"end": 587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 576,
											"end": 587,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 576,
											"end": 587,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 610,
											"end": 621,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 534,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 534,
											"end": 694,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 534,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 711,
											"end": 717,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 88,
											"end": 814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/05_GreatestPowerOf2_NoAssembly.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"solution(uint256)": "db53653e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"solution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/05_GreatestPowerOf2_NoAssembly.sol\":\"Level4Template\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/05_GreatestPowerOf2_NoAssembly.sol\":{\"keccak256\":\"0x3469a8650ec2de7703233085109bcb45ba7f8148febc98abf0a7733339145763\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e59c3802d2efa93fb771b225fd56ceb677955670973f38abc845e9cce92f0a9\",\"dweb:/ipfs/QmfH6VUTA8jDhTHTdXUjRsrpC7MbhZf1bWLe2qMLZiocKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/05_GreatestPowerOf2_NoAssembly.sol": {
				"ast": {
					"absolutePath": "contracts/05_GreatestPowerOf2_NoAssembly.sol",
					"exportedSymbols": {
						"Level4Template": [
							40
						]
					},
					"id": 41,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Level4Template",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 40,
							"linearizedBaseContracts": [
								40
							],
							"name": "Level4Template",
							"nameLocation": "67:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "154:660:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "269:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "269:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 14,
												"nodeType": "IfStatement",
												"src": "265:50:0",
												"trueBody": {
													"id": 13,
													"nodeType": "Block",
													"src": "282:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "303:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 7,
															"id": 12,
															"nodeType": "Return",
															"src": "296:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													16
												],
												"declarations": [
													{
														"constant": false,
														"id": 16,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "432:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 38,
														"src": "424:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 15,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "424:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 18,
												"initialValue": {
													"hexValue": "31",
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "441:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "424:18:0"
											},
											{
												"body": {
													"id": 34,
													"nodeType": "Block",
													"src": "553:141:0",
													"statements": [
														{
															"expression": {
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 22,
																	"name": "number",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "567:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 23,
																		"name": "number",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "576:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "586:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "576:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "567:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 27,
															"nodeType": "ExpressionStatement",
															"src": "567:20:0"
														},
														{
															"expression": {
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 28,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "601:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 29,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "610:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "620:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "610:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "601:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 33,
															"nodeType": "ExpressionStatement",
															"src": "601:20:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 19,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "541:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 35,
												"nodeType": "WhileStatement",
												"src": "534:160:0"
											},
											{
												"expression": {
													"id": 36,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "711:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 7,
												"id": 37,
												"nodeType": "Return",
												"src": "704:13:0"
											}
										]
									},
									"functionSelector": "db53653e",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "solution",
									"nameLocation": "97:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "114:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "106:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:16:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "145:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "144:9:0"
									},
									"scope": 40,
									"src": "88:726:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 41,
							"src": "58:758:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:785:0"
				},
				"id": 0
			}
		}
	}
}